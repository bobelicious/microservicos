version: '3.4'

services:
  kafka:
    image: bitnami/kafka:3.4.0-debian-11-r21
    restart: on-failure
    ports:
      - 9092:9092
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_NUM_PARTITIONS=3
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - augusto-network

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - augusto-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - augusto-network

  zipkin-server:
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    restart: always
    networks:
      - augusto-network

  address-db:
    image: postgres:14.4
    restart: always
    environment:
      POSTGRES_PASSWORD: 123
      POSTGRES_USER: address-user
      POSTGRES_DB: endereco_service
    ports:
      - 5432:5432
    expose:
      - 5432
    command: -p 5432
    volumes:
      - address_data:/var/lib/postgresql/data
    networks:
      - augusto-network

  product-db:
    image: postgres:14.4
    restart: always
    environment:
      POSTGRES_PASSWORD: 123
      POSTGRES_USER: product-user
      POSTGRES_DB: produto_service
    ports:
      - 5434:5434
    expose:
      - 5434
    command: -p 5434
    volumes:
      - product_data:/var/lib/postgresql/data
    networks:
      - augusto-network

  user-db:
    image: postgres:14.4
    restart: always
    environment:
      POSTGRES_PASSWORD: 123
      POSTGRES_USER: user-user
      POSTGRES_DB: usuario_service
      
    ports:
      - 5433:5433
    expose:
      - 5433
    command: -p 5433
    volumes:
      - user_data:/var/lib/postgresql/data
    networks:
      - augusto-network

  naming-server:
    image: bobelicious/naming-server:latest
    ports:
      - 8761:8761
    networks:
      - augusto-network
      
  api-gateway:
    image: bobelicious/api-gateway
    ports:
      - 8765:8765
    depends_on:
      - naming-server
      - zipkin-server
    environment:
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT:  http://zipkin-server:9411/api/v2/spans
      MANAGEMENT.TRACING.ENABLE: 'true'
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
    networks:
      - augusto-network


  address-service:
    image: bobelicious/address-service:latest
    restart: always
    environment:
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT:  http://zipkin-server:9411/api/v2/spans
      MANAGEMENT.TRACING.ENABLE: 'true'
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      SPRING.APPLICATION.NAME: address-service
      SPRING.KAFKA.BOOTSTRAP-SERVERS: kafka:9092
      APP.OUTPUT-KAFKA-TOPIC-PRODUCT: address
      APP.JWT-SECRET: YjczM2M3YmItZjE1ZS00ZmUyLThhMzYtMjUyZDg2OWM2ZDdi
      APP.JWT-EXPIRATION-MILLISECONDS: 604800000
    ports:
      - 8400:8400
    build:
      context: .
      dockerfile: address/Dockerfile
    depends_on:
      - naming-server
      - kafka
      - api-gateway
    networks:
      - augusto-network

  address-service-consumer:
    image: bobelicious/address-service-consumer:latest
    restart: always
    environment:
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT:  http://zipkin-server:9411/api/v2/spans
      MANAGEMENT.TRACING.ENABLE: 'true'
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      SPRING.APPLICATION.NAME: address-service-consumer
      SPRING.DATASOURCE.URL: jdbc:postgresql://address-db:5432/produto_service?useSSL=false&enabledTLSProtocols=TLSv1.2
      SPRING.JPA.PROPERTIES.HIBERNATE.DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING.DATASOURCE.USERNAME: address-user
      SPRING.DATASOURCE.PASSWORD: 123
      SPRING.KAFKA.BOOTSTRAP-SERVERS: kafka:9092
      APP.OUTPUT-KAFKA-TOPIC-PRODUCT: address
      SPRING.KAFKA.CONSUMER.PROPERTIES.SPRING.JSON.TRUSTED.PACKAGES: '*'
    ports:
      - 8401:8401
    build:
      context: .
      dockerfile: address-consumer/Dockerfile
    depends_on:
      - naming-server
      - address-db
      - kafka
      - api-gateway
    networks:
      - augusto-network

  auth-service:
    image: bobelicious/auth-service:latest
    restart: always
    environment:
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT:  http://zipkin-server:9411/api/v2/spans
      MANAGEMENT.TRACING.ENABLE: 'true'
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      SPRING.APPLICATION.NAME: auth-service
      SPRING.DATASOURCE.URL: jdbc:postgresql://user-db:5433/usuario_service?useSSL=false&enabledTLSProtocols=TLSv1.2
      SPRING.JPA.PROPERTIES.HIBERNATE.DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING.DATASOURCE.USERNAME: user-user
      SPRING.DATASOURCE.PASSWORD: 123
      APP.JWT-SECRET: YjczM2M3YmItZjE1ZS00ZmUyLThhMzYtMjUyZDg2OWM2ZDdi
      APP.JWT-EXPIRATION-MILLISECONDS: 604800000
      LOGGING.LEVEL.ORG.SPRIGNFRAMEWORK.SECURITY: DEBUG
    ports:
      - 8300:8300
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    depends_on:
      - naming-server
      - api-gateway
    networks:
      - augusto-network

  product-service:
    image: bobelicious/product-service:latest
    restart: always
    environment:
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT:  http://zipkin-server:9411/api/v2/spans
      MANAGEMENT.TRACING.ENABLE: 'true'
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      SPRING.APPLICATION.NAME: product-service
      SPRING.KAFKA.BOOTSTRAP-SERVERS: kafka:9092
      APP.OUTPUT-KAFKA-TOPIC-PRODUCT: product
      APP.JWT-SECRET: YjczM2M3YmItZjE1ZS00ZmUyLThhMzYtMjUyZDg2OWM2ZDdi
      APP.JWT-EXPIRATION-MILLISECONDS: 604800000
    ports:
      - 8100:8100
    build:
      context: .
      dockerfile: product/Dockerfile
    depends_on:
      - naming-server
      - product-service-consumer
    networks:
      - augusto-network

  product-service-consumer:
    image: bobelicious/product-service-consumer:latest
    restart: always
    environment:
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT:  http://zipkin-server:9411/api/v2/spans
      MANAGEMENT.TRACING.ENABLE: 'true'
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      SPRING.APPLICATION.NAME: product-service-consumer
      SPRING.DATASOURCE.URL: jdbc:postgresql://product-db:5434/produto_service?useSSL=false&enabledTLSProtocols=TLSv1.2
      SPRING.JPA.PROPERTIES.HIBERNATE.DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING.DATASOURCE.USERNAME: product-user
      SPRING.DATASOURCE.PASSWORD: 123
      SPRING.KAFKA.BOOTSTRAP-SERVERS: kafka:9092
      APP.OUTPUT-KAFKA-TOPIC-PRODUCT: product
      SPRING.KAFKA.CONSUMER.PROPERTIES.SPRING.JSON.TRUSTED.PACKAGES: '*'
    ports:
      - 8101:8101
    build:
      context: .
      dockerfile: product-consumer/Dockerfile
    depends_on:
      - naming-server
      - product-db
      - kafka
    networks:
      - augusto-network

  user-service:
    image: bobelicious/user-service:latest
    restart: always
    environment:
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT:  http://zipkin-server:9411/api/v2/spans
      MANAGEMENT.TRACING.ENABLE: 'true'
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      SPRING.APPLICATION.NAME: user-service
      SPRING.KAFKA.BOOTSTRAP-SERVERS: kafka:9092
      APP.OUTPUT-KAFKA-TOPIC-USER: user
      APP.JWT-SECRET: YjczM2M3YmItZjE1ZS00ZmUyLThhMzYtMjUyZDg2OWM2ZDdi
      APP.JWT-EXPIRATION-MILLISECONDS: 604800000
    ports:
      - 8000:8000
    build:
      context: .
      dockerfile: user/Dockerfile
    depends_on:
      - naming-server
      - kafka
      - user-service-consumer
    networks:
      - augusto-network
  user-service-consumer:
    image: bobelicious/user-service-consumer:latest
    restart: always
    environment:
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT:  http://zipkin-server:9411/api/v2/spans
      MANAGEMENT.TRACING.ENABLE: 'true'
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      SPRING.APPLICATION.NAME: user-service-consumer
      SPRING.DATASOURCE.URL: jdbc:postgresql://user-db:5433/usuario_service?useSSL=false&enabledTLSProtocols=TLSv1.2
      SPRING.JPA.PROPERTIES.HIBERNATE.DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING.DATASOURCE.USERNAME: user-user
      SPRING.DATASOURCE.PASSWORD: 123
      SPRING.KAFKA.BOOTSTRAP-SERVERS: kafka:9092
      APP.OUTPUT-KAFKA-TOPIC-USER: user
      SPRING.KAFKA.CONSUMER.PROPERTIES.SPRING.JSON.TRUSTED.PACKAGES: '*'
      APP.JWT-SECRET: YjczM2M3YmItZjE1ZS00ZmUyLThhMzYtMjUyZDg2OWM2ZDdi
      APP.JWT-EXPIRATION-MILLISECONDS: 604800000
    ports:
      - 8001:8001
    build:
      context: .
      dockerfile: user-consumer/Dockerfile
    depends_on:
      - naming-server
      - user-db
      - kafka
      - product-service
    networks:
      - augusto-network
networks:
  augusto-network:
    driver: bridge
volumes:
  user_data:
  product_data:
  address_data:
  
